{"version":3,"sources":["components/EmployeeCard/EmployeeCard.module.css","services/employeesAPI.js","redux/employees/employeesOperations.js","redux/employees/employeesSlice.js","redux/store.js","redux/employees/employeesSelectors.js","components/EmployeesActiveList/EmployeesActiveList.js","components/EmployeeCard/EmployeeCard.js","components/EmployeesAllList/EmployeesAllList.js","App.js","index.js"],"names":["module","exports","BASE_URL","a","axios","get","data","defaults","baseURL","employeesAPI","fetchEmployeesAll","getEmployeesAllData","createAsyncThunk","_","rejectWithValue","employeesAllData","message","employeesSlice","createSlice","name","initialState","employeesAll","employeesAllLoading","employeesAllError","employeesActive","reducers","addEmployeeActiveId","state","payload","includes","push","removeEmployeeActiveId","filter","item","extraReducers","pending","fulfilled","action","rejected","actions","employeesPersistConfig","key","storage","whitelist","store","configureStore","reducer","employees","persistReducer","employeesReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","getEmployeesAll","getEmployeesActive","getEmployeesAllSorted","createSelector","alphabetEnglish","reduce","acc","letter","result","employeesGroup","forEach","employeesItem","firstName","at","toLowerCase","EmployeesActiveList","useSelector","employeesActiveIds","el","id","length","map","lastName","dob","Date","toLocaleString","month","EmployeeCard","dispatch","useDispatch","useState","employeeStatus","setEmployeeStatus","useEffect","onEmployeeStatusChange","e","target","value","classNames","styles","employeeName","active","className","join","type","checked","onChange","EmployeesAllList","employeesAllSorted","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0bd21c4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeName\":\"EmployeeCard_employeeName__1jk49\",\"active\":\"EmployeeCard_active__1kb-v\"};","import axios from 'axios';\r\nconst BASE_URL = 'https://yalantis-react-school-api.yalantis.com/api/task0';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nasync function fetchEmployeesAll() {\r\n  const { data } = await axios.get(`${BASE_URL}/users`);\r\n  return data;\r\n}\r\n\r\nconst employeesAPI = {\r\n  fetchEmployeesAll,\r\n};\r\n\r\nexport default employeesAPI;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport employeesAPI from '../../services/employeesAPI';\r\n\r\nconst getEmployeesAllData = createAsyncThunk(\r\n  'employees/getEmployeesAllData',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const employeesAllData = await employeesAPI.fetchEmployeesAll();\r\n\r\n      return employeesAllData;\r\n    } catch (err) {\r\n      return rejectWithValue(err.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport { getEmployeesAllData };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getEmployeesAllData } from '../employees/employeesOperations';\r\n\r\nconst initialState = {\r\n  employeesAll: [],\r\n  employeesAllLoading: false,\r\n  employeesAllError: null,\r\n  employeesActive: [],\r\n};\r\n\r\nconst employeesSlice = createSlice({\r\n  name: 'employees',\r\n  initialState,\r\n  reducers: {\r\n    addEmployeeActiveId: (state, { payload }) => {\r\n      if (!state.employeesActive.includes(payload))\r\n        state.employeesActive.push(payload);\r\n    },\r\n\r\n    removeEmployeeActiveId: (state, { payload }) => {\r\n      state.employeesActive = state.employeesActive.filter(\r\n        (item) => item !== payload\r\n      );\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getEmployeesAllData.pending](state) {\r\n      state.employeesAllLoading = true;\r\n      state.employeesAllError = null;\r\n    },\r\n    [getEmployeesAllData.fulfilled](state, action) {\r\n      state.employeesAll = action.payload;\r\n      state.employeesAllLoading = false;\r\n      state.employeesAllError = null;\r\n    },\r\n    [getEmployeesAllData.rejected](state, action) {\r\n      state.employeesAllLoading = false;\r\n      state.employeesAllError = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { addEmployeeActiveId, removeEmployeeActiveId } =\r\n  employeesSlice.actions;\r\n\r\nexport default employeesSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport employeesReducer from './employees/employeesSlice';\r\n\r\nconst employeesPersistConfig = {\r\n  key: 'employeesActive',\r\n  storage,\r\n  whitelist: ['employeesActive'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    employees: persistReducer(employeesPersistConfig, employeesReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getEmployeesAll = (state) => state.employees.employeesAll;\r\nconst getEmployeesAllIsLoading = (state) => state.employees.employeesAllLoading;\r\nconst getEmployeesAllError = (state) => state.employees.employeesAllError;\r\nconst getEmployeesActive = (state) => state.employees.employeesActive;\r\n\r\nconst alphabetEnglish = () => [\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n];\r\n\r\nconst getEmployeesAllSorted = createSelector(\r\n  [getEmployeesAll, alphabetEnglish],\r\n  (employees, alphabetEnglish) =>\r\n    alphabetEnglish.reduce((acc, letter) => {\r\n      const result = { letter, employeesGroup: [] };\r\n\r\n      employees.forEach((employeesItem) => {\r\n        if (employeesItem.firstName.at().toLowerCase() === letter)\r\n          result.employeesGroup.push(employeesItem);\r\n      });\r\n\r\n      acc.push(result);\r\n\r\n      return acc;\r\n    }, [])\r\n);\r\n\r\nexport {\r\n  getEmployeesAll,\r\n  getEmployeesAllIsLoading,\r\n  getEmployeesAllError,\r\n  getEmployeesActive,\r\n  getEmployeesAllSorted,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  getEmployeesAll,\r\n  getEmployeesActive,\r\n} from '../../redux/employees/employeesSelectors';\r\n\r\nexport default function EmployeesActiveList() {\r\n  const employeesAll = useSelector(getEmployeesAll);\r\n  const employeesActiveIds = useSelector(getEmployeesActive);\r\n\r\n  const employeesActive = employeesAll.filter((el) =>\r\n    employeesActiveIds.includes(el.id)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Employees birthday</h2>\r\n      {employeesActive.length > 0 ? (\r\n        <ul>\r\n          {employeesActive.map(({ id, firstName, lastName, dob }) => (\r\n            <li key={id}>\r\n              <h3>\r\n                {firstName} {lastName}\r\n              </h3>\r\n              <p>{new Date(dob).toLocaleString('en-US', { month: 'long' })}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Employees List is empty</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  addEmployeeActiveId,\r\n  removeEmployeeActiveId,\r\n} from '../../redux/employees/employeesSlice';\r\nimport { getEmployeesActive } from '../../redux/employees/employeesSelectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styles from './EmployeeCard.module.css';\r\n\r\nexport default function EmployeeCard({ data }) {\r\n  const { id, firstName, lastName, dob } = data;\r\n\r\n  const dispatch = useDispatch();\r\n  const employeesActive = useSelector(getEmployeesActive);\r\n  const [employeeStatus, setEmployeeStatus] = useState('notActive');\r\n\r\n  useEffect(() => {\r\n    employeesActive.includes(id)\r\n      ? setEmployeeStatus('active')\r\n      : setEmployeeStatus('notActive');\r\n  }, []);\r\n\r\n  const onEmployeeStatusChange = (e) => {\r\n    setEmployeeStatus(e.target.value);\r\n\r\n    employeeStatus === 'notActive'\r\n      ? dispatch(addEmployeeActiveId(id))\r\n      : dispatch(removeEmployeeActiveId(id));\r\n  };\r\n\r\n  const classNames = [styles.employeeName];\r\n\r\n  if (employeeStatus === 'active') classNames.push(styles.active);\r\n\r\n  return (\r\n    <li>\r\n      <h3 className={classNames.join(' ')}>\r\n        {firstName} {lastName}\r\n      </h3>\r\n      <form>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={employeeStatus === 'active'}\r\n            name={`${id}_employeeStatus`}\r\n            value=\"active\"\r\n            onChange={onEmployeeStatusChange}\r\n          />\r\n          <span>active</span>\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={employeeStatus === 'notActive'}\r\n            name={`${id}_employeeStatus`}\r\n            value=\"notActive\"\r\n            onChange={onEmployeeStatusChange}\r\n          />\r\n          <span>not active</span>\r\n        </label>\r\n      </form>\r\n    </li>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getEmployeesAllData } from '../../redux/employees/employeesOperations';\r\nimport {\r\n  getEmployeesAll,\r\n  getEmployeesAllIsLoading,\r\n  getEmployeesAllError,\r\n  getEmployeesAllSorted,\r\n} from '../../redux/employees/employeesSelectors';\r\n\r\nimport EmployeeCard from '../EmployeeCard/EmployeeCard';\r\n\r\nexport default function EmployeesAllList() {\r\n  const dispatch = useDispatch();\r\n\r\n  const employeesAllSorted = useSelector(getEmployeesAllSorted);\r\n\r\n  useEffect(() => {\r\n    dispatch(getEmployeesAllData());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employees</h1>\r\n      <ul>\r\n        {employeesAllSorted.map(({ letter, employeesGroup }) => (\r\n          <li key={letter}>\r\n            <h2>{letter}</h2>\r\n            {employeesGroup.length > 0 ? (\r\n              <ul>\r\n                {employeesGroup.map((employeesItem) => (\r\n                  <EmployeeCard key={employeesItem.id} data={employeesItem} />\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No Employees</p>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import EmployeesActiveList from './components/EmployeesActiveList/EmployeesActiveList';\nimport EmployeesAllList from './components/EmployeesAllList/EmployeesAllList';\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <EmployeesAllList />\n      <EmployeesActiveList />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}